pipeline
{
	agent any
	stages {
		stage('Checkout') {
			steps {
				  checkout scm
				  }
		}
		
		stage('Build') {
			when  {
				   expression { params.Build }
			      }
			steps {
					bat 'powershell ".\\build\\build.ps1 $env:BUILD_NUMBER"'
				  }
		}

		stage('Test') {
			when  {
				   expression { params.Test }
			      }
			steps 
				  {
					bat 'powershell ".\\build\\test.ps1"'

					step([$class: 'XUnitBuilder',  
						thresholds: [[$class: 'FailedThreshold', failureThreshold: '4', unstableThreshold: '1']],  
						tools: [[$class: 'XUnitDotNetTestType', pattern:  'test\\Results\\*.testresults' ]] ])

				    cobertura autoUpdateHealth: false, 
						coberturaReportFile: 'test\\Results\\Cobertura.coverageresults', 
						conditionalCoverageTargets: '70, 60, 0', 
						lineCoverageTargets: '80, 60, 0', 
						maxNumberOfBuilds: 0, 
						methodCoverageTargets: '80, 60, 0', 
						onlyStable: false, 
						sourceEncoding: 'ASCII', 
						zoomCoverageChart: false,
						failUnhealthy: false, 
						failUnstable: false

					warnings canComputeNew: false, 
						canResolveRelativePaths: false, 
						categoriesPattern: '', 
						consoleParsers: [[parserName: 'StyleCop']], 
						defaultEncoding: '', 
						excludePattern: '', 
						healthy: '', 
						includePattern: '', 
						messagesPattern: '', 
						unHealthy: '75'

				  }
		}
		
		stage('Publish') {
			when  {
				   expression { params.Publish }
			      }
			steps {
					bat 'powershell ".\\build\\publish.ps1 $env:BUILD_NUMBER jenkins_test"'
					archiveArtifacts artifacts: 'src/jenkins_test/bin/Release/netcoreapp2.0/jenkins_test.zip', fingerprint: true, onlyIfSuccessful: true
			}
		
		}
	}   
}